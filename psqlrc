-- Comments start with --
--
-- File location:
--     Linux: ~/.psqlrc
--     Windows: %AppData%/postgresql/psqlrc.conf

\set QUIET 1

SET DateStyle='ISO, MDY';
SET IntervalStyle='iso_8601';
SET statement_timeout=180000; -- cancel request after 3 mins

-- Find the variables you can set in documentation of `psql` under PostgreSQL Client Applications
-- in the manual (part VI. Reference)
\set COMP_KEYWORD_CASE 'upper'
-- \set ECHO 'errors'
\set ECHO 'queries'
\set ECHO_HIDDEN 'on'
\set ON_ERROR_STOP 'on'
\set ON_ERROR_ROLLBACK 'interactive'
\set VERBOSITY 'verbose'
\set HISTCONTROL 'ignoreboth'
\set HISTSIZE 20000
\set PROMPT1 '%n@%/ [%p] %x%R%# '
\set PROMPT2 '%/%R%# '
\pset null 'Â¤'
\pset linestyle 'unicode'
\pset border 2

-- A neat idea from https://opensourcedbms.com/dbms/psqlrc-psql-startup-file-for-postgres/
\echo 'Some custom extra commands:\n'
\echo '   :cols        --  List columns of all the tables'
\echo '   :dbsize      --  Database size'
\echo '   :indexes     --  List indexes on tables in search_path'
\echo '   :nrows       --  Estimate of # rows in all tables in *all schemas*'
\echo '                    (Run VACUUM if many tables have 0 rows). Use count(*) to get actual count of rows.'
\echo '   :schemarows  --  Estimate of # rows in all tables in schemas in the current search_path'
\echo '   :settings    --  Server settings'
\echo '   :sp          --  SHOW search_path'
\echo '   :tblsize     --  Table sizes'
\echo ''
\echo 'Type \\set to see how these are defined.\n\n'
\set cols 'select c.relnamespace::regnamespace as schemaname, att.attrelid::regclass as tablename, attname as colname, atttypid::regtype as coltype from pg_attribute att join pg_class c on att.attrelid = c.oid where att.attnum > 0 and c.relkind=''r'' and c.relnamespace::regnamespace::text not like ''pg_%'' and c.relnamespace::regnamespace::text <> ''information_schema'';'
\set dbsize 'select datname,pg_size_pretty(pg_database_size(datname)) db_size from pg_database order by pg_database_size(datname);'
\set indexes 'select indexdef from pg_indexes;'
\set nrows 'select table_schema as schema, table_name as table, to_char(reltuples::bigint, ''999G999G999G999'') as "# rows (roughly)", relowner::regrole as owner from information_schema.tables join pg_class on relname = table_name where table_schema not in (''pg_catalog'',''information_schema'') and table_type<>''VIEW'';'
\set schemarows 'select table_schema as schema, table_name as table, to_char(reltuples::bigint, ''999G999G999G999'') as "# rows(roughly)", relowner::regrole as owner from information_schema.tables join pg_class on relname = table_name where table_schema not in (''pg_catalog'',''information_schema'') and table_type<>''VIEW'' and table_schema::text in (select unnest(string_to_array(setting,'', '')) from pg_settings where name=''search_path'');'
\set settings 'select name,setting,source,short_desc from pg_settings;'
\set sp 'SHOW search_path;'
\set tblsize 'select schemaname,tablename,pg_size_pretty(pg_table_size((quote_ident(schemaname) || ''.'' || quote_ident(tablename))::regclass)) tbl_size from pg_tables where schemaname not in (''pg_catalog'',''information_schema'') and has_schema_privilege(schemaname,''USAGE'') order by pg_table_size(quote_ident(schemaname)||''.''||quote_ident(tablename));'

\timing on
-- \x auto

\unset QUIET
